version: '3.8'

x-common-env: &common-env
  env_file: [../.env] 

networks:
  internal:
    name: prefect_internal_network

volumes:
  pipeboard-pgdata:
  prom-data:
  grafana-data:

services:
  db:
    image: postgres:14-alpine
    <<: *common-env
    networks: [internal]
    ports: ["${HOST_POSTGRES_PORT:-5432}:5432"]
    volumes:
      - pipeboard-pgdata:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 30s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    <<: *common-env
    networks: [internal]
    expose: ["6379"]
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  orion:
    build:
      context: ..
      dockerfile: docker/Dockerfile.orion
    image: mrschrodingers/pipeboard-orion:latest
    hostname: orion
    networks:
      internal:
        aliases:
          - orion
    <<: *common-env
    environment:
      PREFECT_UI_API_URL: "/api"
    ports: ["${HOST_PREFECT_PORT:-4200}:${CONTAINER_PREFECT_PORT:-4200}"]
    volumes:
      - ~/.docker/config.json:/root/.docker/config.json:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    restart: on-failure
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=${CONTAINER_PREFECT_PORT:-4200}"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:${CONTAINER_PREFECT_PORT:-4200}/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 90s

  prefect-setup:
    build:
      context: ..
      dockerfile: docker/Dockerfile.setup
    image: mrschrodingers/pipeboard-setup:latest
    <<: *common-env
    networks: [internal]
    volumes:
      - ~/.docker/config.json:/root/.docker/config.json:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      orion: { condition: service_healthy }
    restart: "no"

  worker:
    build:
      context: ..
      dockerfile: infrastructure/prefect/worker/Dockerfile.worker
    image: mrschrodingers/pipeboard-worker:latest
    <<: *common-env
    networks: [internal]
    volumes:
      - ~/.docker/config.json:/root/.docker/config.json:ro
      - /var/run/docker.sock:/var/run/docker.sock 
    depends_on:
      orion: { condition: service_healthy }
      prefect-setup: { condition: service_completed_successfully }
    restart: on-failure
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=${HOST_METRICS_PORT:-8082}"
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'prefect worker start --pool' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  pushgateway:
    image: prom/pushgateway:latest
    networks: [internal]
    expose: ["9091"]
    ports: ["9091:9091"]
    restart: on-failure

  prometheus:
    image: prom/prometheus:v2.52.0
    networks: [internal]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
    ports: ["9090:9090"]
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--timeout=5", "-O", "/dev/null", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 5

  grafana:
    image: grafana/grafana-oss:latest
    <<: *common-env
    networks: [internal]
    ports: ["${HOST_GRAFANA_PORT:-3000}:3000"]
    volumes: [grafana-data:/var/lib/grafana]
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
